plugins{
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

repositories{
    mavenCentral()
    jcenter()
    maven { url 'https://www.jitpack.io' }
}

ext{
    arcVersion        = 'v115'
    jobaVersion       = 'v2.10.8'
    discord4jVersion  = '3.1.2'

    jaxbVersion       = '2.3.1'
    hibernateVersion  = '5.4.24.Final'
    postgresqlVersion = '42.2.5'
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs += ["--enable-preview"]
}

tasks.withType(JavaExec) {
    jvmArgs += "--enable-preview"
}

sourceSets.main.java.srcDirs = ["src/main/java/"]
sourceSets.main.resources.srcDirs = ["src/main/resources"]
project.ext.mainClassName = "insidebot.InsideBot"

dependencies{
    implementation "com.discord4j:discord4j-core:$discord4jVersion"
    implementation "com.github.Anuken.Arc:arc-core:$arcVersion"
    implementation "com.github.JodaOrg:joda-time:v2.10.6"

    // data dependencies
    implementation "javax.xml.bind:jaxb-api:$jaxbVersion"
    implementation "org.hibernate:hibernate-core:$hibernateVersion"
    implementation "org.postgresql:postgresql:$postgresqlVersion"

    // spring dependencies
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
}

task dist(type: Jar){
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}}

    archiveFileName = "${project.name}.jar"

    manifest { attributes 'Main-Class': project.mainClassName }
}
